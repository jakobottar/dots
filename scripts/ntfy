#! /bin/bash

# uses ntfy.sh to push-notify on script run/failure
# usage: ntfy <message> <command>
# message must be in quotes or a single word

#==============================================================================
# config: ~/.config/ntfy.yml
# # ntfy URL (https://ntfy.sh/)
# url: ntfy.sh/test-url

# # notification title
# title:
#   success: Success!
#   failure: Failure!
#   requeue: Requeue...

# # emoji
# tag:
#   success: partying_face
#   failure: facepalm
#   requeue: repeat

# # notification message format
# # used as message: message_format
# message_format: 
#   success: "Run finished."
#   failure: "Run failed, you should go check it."
#   requeue: "Ran out of time, requeued."
#==============================================================================
config_file_name="$HOME/.config/ntfy.yml"

# parse yaml function
# from https://stackoverflow.com/a/21189044
function parse_yaml {
   local prefix=$2
   local s='[[:space:]]*' w='[a-zA-Z0-9_]*' fs=$(echo @|tr @ '\034')
   sed -ne "s|^\($s\):|\1|" \
        -e "s|^\($s\)\($w\)$s:$s[\"']\(.*\)[\"']$s\$|\1$fs\2$fs\3|p" \
        -e "s|^\($s\)\($w\)$s:$s\(.*\)$s\$|\1$fs\2$fs\3|p"  $1 |
   awk -F$fs '{
      indent = length($1)/2;
      vname[indent] = $2;
      for (i in vname) {if (i > indent) {delete vname[i]}}
      if (length($3) > 0) {
         vn=""; for (i=0; i<indent; i++) {vn=(vn)(vname[i])("_")}
         printf("%s%s%s=\"%s\"\n", "'$prefix'",vn, $2, $3);
      }
   }'
}

# send message upon completion or failure
ntfy_me() {

   # if the exit status is 0, notify success
   if [ $1 -eq 0 ]; then 
      curl -s \
         -H "Title: $config_title_success" \
         -H "Tags: $config_tag_success" \
         -d "$message_body: $config_message_format_success" \
         $config_url

   # if the exit status is 99, notify requeue
   elif [ $1 -eq 99 ]; then
      curl -s \
         -H "Title: $config_title_requeue" \
         -H "Tags: $config_tag_requeue" \
         -d "$message_body: $config_message_format_requeue" \
         $config_url
   else
      # otherwise, notify failure
      curl -s \
         -H "Title: $config_title_failure" \
         -H "Tags: $config_tag_failure" \
         -d "$message_body: $config_message_format_failure" \
         $config_url
   fi
}

# set default configs
config_url=""
config_title_success="Success!"
config_title_failure="Failure!"
config_title_requeue="Requeue..."
config_tag_success="partying_face"
config_tag_failure="facepalm"
config_tag_requeue="repeat"
config_message_format_success="finished"
config_message_format_failure="failed"
config_message_format_requeue="requeued"

# get config file
if [ -f $config_file_name ]; then
    eval $(parse_yaml $config_file_name "config_")
fi

# check if there are enough arguments
if [ $# -lt 2 ]; then 
    echo "ntfy: please specify at least two args: message & return code"
    exit -1
fi

# get ntfy message
message_body=$1

# notify me
ntfy_me $2 > /dev/null
